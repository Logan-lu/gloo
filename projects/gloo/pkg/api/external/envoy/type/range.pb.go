// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: projects/gloo/api/external/envoy/type/range.proto

package _type

import (
	bytes "bytes"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Specifies the int64 start and end of the range using half-open interval semantics [start,
// end).
type Int64Range struct {
	// start of the range (inclusive)
	Start int64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	// end of the range (exclusive)
	End                  int64    `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Int64Range) Reset()         { *m = Int64Range{} }
func (m *Int64Range) String() string { return proto.CompactTextString(m) }
func (*Int64Range) ProtoMessage()    {}
func (*Int64Range) Descriptor() ([]byte, []int) {
	return fileDescriptor_f44a140385350a9d, []int{0}
}
func (m *Int64Range) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Int64Range.Unmarshal(m, b)
}
func (m *Int64Range) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Int64Range.Marshal(b, m, deterministic)
}
func (m *Int64Range) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Int64Range.Merge(m, src)
}
func (m *Int64Range) XXX_Size() int {
	return xxx_messageInfo_Int64Range.Size(m)
}
func (m *Int64Range) XXX_DiscardUnknown() {
	xxx_messageInfo_Int64Range.DiscardUnknown(m)
}

var xxx_messageInfo_Int64Range proto.InternalMessageInfo

func (m *Int64Range) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Int64Range) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

// Specifies the double start and end of the range using half-open interval semantics [start,
// end).
type DoubleRange struct {
	// start of the range (inclusive)
	Start float64 `protobuf:"fixed64,1,opt,name=start,proto3" json:"start,omitempty"`
	// end of the range (exclusive)
	End                  float64  `protobuf:"fixed64,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoubleRange) Reset()         { *m = DoubleRange{} }
func (m *DoubleRange) String() string { return proto.CompactTextString(m) }
func (*DoubleRange) ProtoMessage()    {}
func (*DoubleRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_f44a140385350a9d, []int{1}
}
func (m *DoubleRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleRange.Unmarshal(m, b)
}
func (m *DoubleRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleRange.Marshal(b, m, deterministic)
}
func (m *DoubleRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleRange.Merge(m, src)
}
func (m *DoubleRange) XXX_Size() int {
	return xxx_messageInfo_DoubleRange.Size(m)
}
func (m *DoubleRange) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleRange.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleRange proto.InternalMessageInfo

func (m *DoubleRange) GetStart() float64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *DoubleRange) GetEnd() float64 {
	if m != nil {
		return m.End
	}
	return 0
}

func init() {
	proto.RegisterType((*Int64Range)(nil), "envoy.type.Int64Range")
	proto.RegisterType((*DoubleRange)(nil), "envoy.type.DoubleRange")
}

func init() {
	proto.RegisterFile("projects/gloo/api/external/envoy/type/range.proto", fileDescriptor_f44a140385350a9d)
}

var fileDescriptor_f44a140385350a9d = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xb1, 0x4e, 0x03, 0x31,
	0x10, 0x44, 0x65, 0x02, 0x14, 0x4b, 0x83, 0x4e, 0x29, 0x4e, 0x29, 0x10, 0x4a, 0x45, 0x83, 0x57,
	0x88, 0x40, 0x4f, 0x44, 0x43, 0x17, 0xa5, 0xa4, 0xbb, 0x0b, 0x2b, 0x73, 0x60, 0xbc, 0x96, 0xbd,
	0x41, 0xbe, 0x3f, 0xe2, 0x13, 0xf8, 0x1e, 0xfe, 0x81, 0x1e, 0xd9, 0x2e, 0x10, 0xd2, 0xd1, 0x8d,
	0x9f, 0x3c, 0xa3, 0xd9, 0x81, 0x2b, 0x1f, 0xf8, 0x85, 0x76, 0x12, 0xd1, 0x58, 0x66, 0xec, 0xfc,
	0x80, 0x94, 0x84, 0x82, 0xeb, 0x2c, 0x92, 0x7b, 0xe7, 0x11, 0x65, 0xf4, 0x84, 0xa1, 0x73, 0x86,
	0xb4, 0x0f, 0x2c, 0xdc, 0x40, 0xe1, 0x3a, 0xf3, 0xc5, 0xdc, 0xb0, 0xe1, 0x82, 0x31, 0xab, 0xfa,
	0x63, 0xd1, 0x50, 0x92, 0x0a, 0x29, 0x49, 0x65, 0xcb, 0x15, 0xc0, 0x83, 0x93, 0xdb, 0xd5, 0x36,
	0x27, 0x35, 0x73, 0x38, 0x8a, 0xd2, 0x05, 0x69, 0xd5, 0xb9, 0xba, 0x98, 0x6d, 0xeb, 0xa3, 0x39,
	0x85, 0x19, 0xb9, 0xa7, 0xf6, 0xa0, 0xb0, 0x2c, 0x97, 0x37, 0x70, 0x72, 0xcf, 0xfb, 0xde, 0xd2,
	0x84, 0x4d, 0x4d, 0xd8, 0x54, 0xb1, 0xad, 0xe3, 0xe7, 0xf7, 0xa1, 0xfa, 0xf8, 0x3a, 0x53, 0xd0,
	0x0e, 0xac, 0x4b, 0x5f, 0x1f, 0x38, 0x8d, 0xfa, 0xb7, 0xfa, 0x1a, 0x4a, 0xe4, 0x26, 0x97, 0xdb,
	0xa8, 0xc7, 0x3b, 0x33, 0xc8, 0xf3, 0xbe, 0xd7, 0x3b, 0x7e, 0xc3, 0xc8, 0x96, 0x2f, 0x07, 0xae,
	0x8b, 0xfc, 0xdd, 0xc7, 0xbf, 0x9a, 0xff, 0x36, 0xea, 0x8f, 0xcb, 0xa1, 0xd7, 0x3f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x30, 0x0c, 0xc2, 0xa1, 0x53, 0x01, 0x00, 0x00,
}

func (this *Int64Range) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Int64Range)
	if !ok {
		that2, ok := that.(Int64Range)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Start != that1.Start {
		return false
	}
	if this.End != that1.End {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *DoubleRange) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DoubleRange)
	if !ok {
		that2, ok := that.(DoubleRange)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Start != that1.Start {
		return false
	}
	if this.End != that1.End {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
